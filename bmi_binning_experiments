{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "aae11cf1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/sl/syqsj8q94yn7kbv8l50mtwdw0000gn/T/ipykernel_3332/951949340.py:8: DeprecationWarning: Please use `pearsonr` from the `scipy.stats` namespace, the `scipy.stats.stats` namespace is deprecated.\n",
      "  from scipy.stats.stats import pearsonr, normaltest\n",
      "/var/folders/sl/syqsj8q94yn7kbv8l50mtwdw0000gn/T/ipykernel_3332/951949340.py:8: DeprecationWarning: Please use `normaltest` from the `scipy.stats` namespace, the `scipy.stats.stats` namespace is deprecated.\n",
      "  from scipy.stats.stats import pearsonr, normaltest\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import statsmodels.formula.api as smf\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib\n",
    "import numpy.ma as ma\n",
    "from scipy.stats.stats import pearsonr, normaltest\n",
    "from scipy.spatial.distance import correlation\n",
    "import statsmodels.api as sm\n",
    "\n",
    "sns.set_style(\"white\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "da6ff0ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('insurance.csv')\n",
    "\n",
    "#Creating Samples\n",
    "np.random.seed(2)\n",
    "\n",
    "train = data.sample(round(data.shape[0]*.8)) # 80%\n",
    "test = data.drop(train.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a79c82ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "binned_bmi = pd.cut(train['bmi'], [0,18.5,30,35,60], right = False, retbins = True)\n",
    "bins = [0,18.5,30,35,60]\n",
    "\n",
    "\n",
    "train['bmi_binned'] = pd.cut(data['bmi'], bins = bins, right = False)\n",
    "test['bmi_binned'] = pd.cut(data['bmi'], bins = bins, right = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "de3e47d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                charges   R-squared:                       0.868\n",
      "Model:                            OLS   Adj. R-squared:                  0.866\n",
      "Method:                 Least Squares   F-statistic:                     533.7\n",
      "Date:                Fri, 03 Mar 2023   Prob (F-statistic):               0.00\n",
      "Time:                        16:49:20   Log-Likelihood:                -10524.\n",
      "No. Observations:                1070   AIC:                         2.108e+04\n",
      "Df Residuals:                    1056   BIC:                         2.115e+04\n",
      "Df Model:                          13                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "===================================================================================================================================\n",
      "                                                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
      "-----------------------------------------------------------------------------------------------------------------------------------\n",
      "Intercept                                                       -3128.9395   1371.732     -2.281      0.023   -5820.571    -437.309\n",
      "sex[T.male]                                                      -468.9635    280.034     -1.675      0.094   -1018.450      80.523\n",
      "bmi_binned[T.Interval(18.5, 30.0, closed='left')]                1421.4471   1339.790      1.061      0.289   -1207.506    4050.400\n",
      "bmi_binned[T.Interval(30.0, 35.0, closed='left')]                1462.9387   1352.835      1.081      0.280   -1191.612    4117.490\n",
      "bmi_binned[T.Interval(35.0, 60.0, closed='left')]                2068.3753   1368.338      1.512      0.131    -616.595    4753.345\n",
      "smoker[T.yes]                                                    1.428e+04   2637.180      5.414      0.000    9103.391    1.95e+04\n",
      "region[T.northwest]                                              -415.2199    400.114     -1.038      0.300   -1200.329     369.889\n",
      "region[T.southeast]                                              -984.4177    401.202     -2.454      0.014   -1771.662    -197.173\n",
      "region[T.southwest]                                             -1206.9444    403.090     -2.994      0.003   -1997.892    -415.997\n",
      "bmi_binned[T.Interval(18.5, 30.0, closed='left')]:smoker[T.yes]  -566.2380   2689.688     -0.211      0.833   -5843.978    4711.502\n",
      "bmi_binned[T.Interval(30.0, 35.0, closed='left')]:smoker[T.yes]  1.773e+04   2717.075      6.526      0.000    1.24e+04    2.31e+04\n",
      "bmi_binned[T.Interval(35.0, 60.0, closed='left')]:smoker[T.yes]  2.042e+04   2719.910      7.506      0.000    1.51e+04    2.58e+04\n",
      "age                                                               262.0416     10.057     26.056      0.000     242.308     281.776\n",
      "children                                                          540.3903    116.101      4.654      0.000     312.575     768.205\n",
      "==============================================================================\n",
      "Omnibus:                      713.212   Durbin-Watson:                   1.908\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             5822.948\n",
      "Skew:                           3.172   Prob(JB):                         0.00\n",
      "Kurtosis:                      12.505   Cond. No.                     1.64e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 1.64e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n",
      "RMSE: 4134.429444582986\n",
      "RSE: 4553.032594722629\n",
      "R2: 0.8679083113823209\n"
     ]
    }
   ],
   "source": [
    "#df = train, formula = 'charges ~ age + binned_bmi*smoker + children + region'\n",
    "\n",
    "ols_object = smf.ols(formula = 'charges ~ age + sex + bmi_binned*smoker + children + region', data = train)\n",
    "model = ols_object.fit()\n",
    "print(model.summary())\n",
    "\n",
    "#Stats\n",
    "pred = model.predict(test)\n",
    "\n",
    "print('RMSE:',np.sqrt(((test.charges - pred)**2).mean()))\n",
    "print('RSE:', np.sqrt(model.mse_resid))\n",
    "print('R2:', model.rsquared)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
